// Import CSS for Vite processing
import '../css/articles.css';

// Auto-generated articles data - DO NOT EDIT MANUALLY
// This file is automatically generated by scripts/auto-register-articles.js
// To modify articles, edit the HTML files in private_html/articles/

const articles = [
  {
    "id": 999,
    "title": "PHP-QA-CI: A Comprehensive Quality Assurance Pipeline in a Single Dependency",
    "excerpt": "Discover how LTS PHP-QA-CI provides a complete, production-ready QA pipeline with 12+ integrated tools through a single Composer dependency. Learn configuration, customization, and CI/CD integration strategies.",
    "category": "php",
    "date": "2025-07-25",
    "slug": "php-qa-ci-comprehensive-quality-pipeline"
  },
  {
    "id": 22,
    "title": "PHP PER: The Evolution Beyond PSR-12 Coding Standards",
    "excerpt": "Understanding PHP Evolving Recommendations (PER), how to enforce them with QA tools, and why PER Coding Style is the future of PHP standards.",
    "category": "php",
    "date": "2025-07-24",
    "slug": "php-per-coding-style-evolution"
  },
  {
    "id": 233,
    "title": "TypeScript Dependency Injection: A PHP Developer's Perspective",
    "excerpt": "Understanding the fundamental differences between dependency injection in TypeScript and PHP, from structural typing to the lack of standardization.",
    "category": "typescript",
    "date": "2025-07-23",
    "slug": "typescript-di-for-php-developers"
  },
  {
    "id": 473,
    "title": "oclif: The Open CLI Framework - A Comprehensive Guide",
    "excerpt": "An in-depth exploration of oclif, the enterprise-grade CLI framework from Salesforce. Learn best practices, pros and cons, and compare with alternatives.",
    "category": "typescript",
    "date": "2025-07-22",
    "slug": "oclif-cli-framework-guide"
  },
  {
    "id": 513,
    "title": "Dynamic Gradient Headings: A CSS and JavaScript Implementation",
    "excerpt": "A straightforward approach to creating mouse-responsive gradient text effects using CSS custom properties and vanilla JavaScript",
    "category": "php",
    "date": "2025-07-21",
    "slug": "dynamic-gradient-headings"
  },
  {
    "id": 824,
    "title": "Building Better Claude Code Workflows with CC-Commands",
    "excerpt": "Discover how the CC-Commands repository solves the pain points of managing custom Claude Code commands across multiple projects with elegant automation and intelligent synchronization.",
    "category": "ai",
    "date": "2025-07-18",
    "slug": "claude-code-custom-commands-cc-commands"
  },
  {
    "id": 12,
    "title": "Fedora 42: The Revolutionary Linux Release That Changes Everything",
    "excerpt": "Discover the groundbreaking features of Fedora 42, including KDE Plasma promotion to full edition status, the revolutionary COSMIC desktop environment, and the modernized Anaconda WebUI installer that transforms Linux computing.",
    "category": "infrastructure",
    "date": "2025-07-18",
    "slug": "fedora-42-breakthrough-features"
  },
  {
    "id": 459,
    "title": "Managing Legacy PHP: From Technical Debt to Modern Architecture",
    "excerpt": "Strategies for modernizing legacy PHP codebases and managing technical debt effectively",
    "category": "php",
    "date": "2025-01-15",
    "slug": "legacy-php-modernization"
  },
  {
    "id": 690,
    "title": "Ansible Automation for PHP Infrastructure",
    "excerpt": "Complete guide to automating PHP infrastructure deployment and management using Ansible",
    "category": "infrastructure",
    "date": "2025-01-10",
    "slug": "ansible-php-infrastructure"
  },
  {
    "id": 656,
    "title": "Proxmox vs Cloud: Why Private Infrastructure Wins",
    "excerpt": "Comparative analysis of Proxmox private cloud vs public cloud solutions for enterprise infrastructure",
    "category": "infrastructure",
    "date": "2025-01-05",
    "slug": "proxmox-vs-cloud"
  },
  {
    "id": 5,
    "title": "High-Performance PHP: Optimization Strategies",
    "excerpt": "Advanced PHP optimization techniques for high-performance applications and systems",
    "category": "php",
    "date": "2024-12-28",
    "slug": "high-performance-php"
  },
  {
    "id": 155,
    "title": "MySQL Performance Tuning for Complex PHP Applications",
    "excerpt": "Database optimization strategies specifically tailored for bespoke PHP systems with complex queries",
    "category": "database",
    "date": "2024-12-20",
    "slug": "mysql-performance-php"
  },
  {
    "id": 671,
    "title": "Building Scalable Backend APIs with Modern PHP",
    "excerpt": "Comprehensive guide to building scalable, maintainable PHP APIs using modern architecture patterns",
    "category": "php",
    "date": "2024-12-15",
    "slug": "scalable-php-apis"
  },
  {
    "id": 675,
    "title": "AI-Enhanced PHP Development: Tools and Workflows",
    "excerpt": "Modern PHP development enhanced with AI tools and workflows for increased productivity and code quality",
    "category": "ai",
    "date": "2024-12-10",
    "slug": "ai-enhanced-php-development"
  }
];

const categories = {
  "php": {
    "label": "PHP",
    "description": "PHP development, frameworks, best practices",
    "backgroundColor": "#f3e5f5",
    "textColor": "#7b1fa2"
  },
  "infrastructure": {
    "label": "Infrastructure",
    "description": "DevOps, hosting, deployment, automation",
    "backgroundColor": "#e8f5e9",
    "textColor": "#388e3c"
  },
  "database": {
    "label": "Database",
    "description": "MySQL, PostgreSQL, optimization, architecture",
    "backgroundColor": "#e3f2fd",
    "textColor": "#1976d2"
  },
  "ai": {
    "label": "AI",
    "description": "AI tools, ML integration, automation",
    "backgroundColor": "#fff3e0",
    "textColor": "#f57c00"
  },
  "typescript": {
    "label": "TypeScript",
    "description": "TypeScript, Node.js, modern JavaScript",
    "backgroundColor": "#e1f5fe",
    "textColor": "#0277bd"
  }
};

class ArticleManager {
  constructor() {
    this.articles = articles;
    this.filteredArticles = [...this.articles];
    this.currentCategory = 'all';
    this.searchTerm = '';
    this.init();
  }

  init() {
    this.setupEventListeners();
    this.renderArticles();
    this.hideLoadingIndicator();
  }

  setupEventListeners() {
    const searchInput = document.getElementById('articleSearch');
    if (searchInput) {
      const handler = e => {
        this.searchTerm = e.target.value.toLowerCase();
        this.filterArticles();
      };
      
      // Use debounce if available, otherwise use direct handler
      if (window.appUtils && window.appUtils.debounce) {
        searchInput.addEventListener('input', window.appUtils.debounce(handler, 300));
      } else {
        searchInput.addEventListener('input', handler);
      }
    }

    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.addEventListener('click', e => {
        this.handleCategoryFilter(e.target);
      });
    });
  }

  handleCategoryFilter(button) {
    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.classList.remove('active');
    });
    button.classList.add('active');
    this.currentCategory = button.dataset.category;
    this.filterArticles();
  }

  filterArticles() {
    this.filteredArticles = this.articles.filter(article => {
      const categoryMatch = this.currentCategory === 'all' || article.category === this.currentCategory;
      const searchMatch = this.searchTerm === '' || 
        article.title.toLowerCase().includes(this.searchTerm) ||
        article.excerpt.toLowerCase().includes(this.searchTerm);
      return categoryMatch && searchMatch;
    });
    this.renderArticles();
  }

  renderArticles() {
    const grid = document.getElementById('articlesGrid');
    const noResults = document.getElementById('noResults');
    
    if (!grid) return;
    
    if (this.filteredArticles.length === 0) {
      grid.style.display = 'none';
      if (noResults) noResults.style.display = 'block';
      return;
    }
    
    grid.style.display = 'grid';
    if (noResults) noResults.style.display = 'none';
    
    grid.innerHTML = this.filteredArticles.map(article => this.createArticleCard(article)).join('');
    
    // Animate articles
    requestAnimationFrame(() => {
      grid.querySelectorAll('.article-card').forEach((card, index) => {
        setTimeout(() => {
          card.style.opacity = '1';
          card.style.transform = 'translateY(0)';
        }, index * 50);
      });
    });
  }

  createArticleCard(article) {
    const date = new Date(article.date).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    
    const categoryLabel = categories[article.category]?.label || article.category;
    
    return `
      <article class="article-card" style="opacity: 0; transform: translateY(20px);">
        <div class="article-meta">
          <span class="article-category ${article.category}">${categoryLabel}</span>
          <time>${date}</time>
        </div>
        <a href="/articles/${article.slug}.html" class="article-title">${article.title}</a>
        <p class="article-excerpt">${article.excerpt}</p>
        <a href="/articles/${article.slug}.html" class="article-read-more">
          Read more â†’
        </a>
      </article>
    `;
  }

  hideLoadingIndicator() {
    const indicator = document.getElementById('loadingIndicator');
    if (indicator) {
      indicator.style.display = 'none';
    }
  }
}

// Initialize when DOM is ready
(function() {
  let retryCount = 0;
  const maxRetries = 100; // 5 seconds max wait
  
  function init() {
    if (typeof window.appUtils !== 'undefined') {
      new ArticleManager();
    } else if (retryCount < maxRetries) {
      retryCount++;
      setTimeout(init, 50);
    } else {
      console.error('Failed to initialize ArticleManager: appUtils not found');
      // Initialize without debounce as fallback
      new ArticleManager();
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();
