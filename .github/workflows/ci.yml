name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: write
  actions: read
  checks: write
  workflows: write

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Auto-format code
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          npm run format
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --staged --quiet || git commit -m "$(cat <<'EOF'
          ðŸ¤– Auto-format code
          
          Co-Authored-By: GitHub Actions <action@github.com>
          EOF
          )"

      - name: Push formatting changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Check formatting (after auto-format)
        run: npm run format:check

      - name: Lint code
        run: npm run lint:check

  quality-assurance:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
          coverage: none

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Cache PHP dependencies
        uses: actions/cache@v3
        with:
          path: qa-tools/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('qa-tools/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install PHP QA tools
        working-directory: qa-tools
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Auto-fix PHP code style
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: qa-tools
        run: composer run cs-fix

      - name: Check PHP code style
        working-directory: qa-tools
        run: composer run cs-check

      - name: Run PHPStan analysis
        working-directory: qa-tools
        run: composer run phpstan

      - name: Run Psalm analysis
        working-directory: qa-tools
        run: composer run psalm

      - name: Check shell scripts with ShellCheck
        run: |
          find code-snippets -name "*.sh" -type f | xargs -r shellcheck -f gcc
          find . -name "*.sh" -type f -not -path "./node_modules/*" -not -path "./qa-tools/vendor/*" | xargs -r shellcheck -f gcc

      - name: Commit PHP code fixes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add code-snippets/
          git diff --staged --quiet || git commit -m "$(cat <<'EOF'
          ðŸ”§ Auto-fix PHP code quality issues
          
          Co-Authored-By: GitHub Actions <action@github.com>
          EOF
          )"

      - name: Push QA fixes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  build:
    name: Build Site
    runs-on: ubuntu-latest
    needs: [lint-and-format, quality-assurance]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Process syntax highlighting
        run: npm run syntax-highlight

      - name: Build site
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: dist/
          retention-days: 30

  deploy-trigger:
    name: Trigger Deployment
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist/

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Deploy to server
        run: |
          # Copy build to public_html
          rm -rf public_html/*
          cp -r dist/* public_html/
          
          # Commit changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public_html/
          git diff --staged --quiet || git commit -m "$(cat <<'EOF'
          ðŸš€ Update site build for deployment
          
          Co-Authored-By: GitHub Actions <action@github.com>
          EOF
          )"

      - name: Push build updates
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: deploy-trigger
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}